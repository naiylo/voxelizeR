% SPDX-FileCopyrightText: 2024 Helmholtz Centre Potsdam - GFZ German Research Centre for Geosciences
% SPDX-FileCopyrightText: 2024 Benjamin Brede
% SPDX-License-Identifier: GPL-3.0-or-later

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class-Rays.R
\docType{class}
\name{Rays-class}
\alias{Rays-class}
\title{An S4 class to represent LiDAR rays}
\description{
Class Rays is the representation of a las/laz file according to the
\href{https://www.asprs.org/wp-content/uploads/2019/07/LAS_1_4_r15.pdf}{LAS file format specifications}. \code{Rays} inherit from \code{LAS} with additional attributes:
\itemize{
\item{\code{Xtraj}, \code{Ytraj}, \code{Ztraj} (numeric): coordinates of the point on the trajectory from where laser pulse was fired}
\item{\code{Xorigin}, \code{Yorigin}, \code{Zorigin} (numeric): coordinates of origin of this segment, e.g. when multi-return pulses are split, or pulses are clipped}
\item{\code{XYZisHit} (logical): if XYZ represents a true hit or virtual end point generated by clipping Rays}}
}
\examples{
# Load required packages
library(lidR)
library(pracma)
library(dplyr)
library(data.table)

# Read in LAS data
data_file <- system.file("extdata", "H7_LS_F2_H20_200901-120129.laz", package = "voxelizer")
las <- readLAS(data_file)

# Create a trajectory for the LAS object
traj_file <- system.file("extdata", "H7_LS_F2_H20_200901-120129.traj", package = "voxelizer")
colnames <- c('gpstime', 'roll', 'pitch', 'yaw', 'Xorigin', 'Yorigin', 'Zorigin')
traj <- fread(traj_file[1], col.names = colnames) \%>\%
  select(gpstime, Xorigin, Yorigin, Zorigin) \%>\%
  rename(Xtraj = Xorigin,
         Ytraj = Yorigin,
         Ztraj = Zorigin)

# Create a subset of the LAS data
laz <- las[1:10]

# Compute rays from LAS points and trajectory
rays_obj <- las2rays(laz, traj)

# Checking additional attributes initialization
attributes <- names(rays_obj@data)
print(attributes)

# Combining two Rays objects
rays_obj1 <- new("Rays")
rays_obj2 <- new("Rays")
combined_rays <- rbind(rays_obj1, rays_obj2)
print(combined_rays)

# Validity check for a Rays object
is_valid <- validObject(rays_obj)

# Handling an empty Rays object
empty_rays_obj <- new("Rays")
empty_rays_obj@data <- empty_rays_obj@data[0, ]
is_empty_valid <- validObject(empty_rays_obj)

# Show method for a Rays object
show(rays_obj)

}
\author{
Benjamin Brede
}
