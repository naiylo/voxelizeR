% SPDX-FileCopyrightText: 2024 Helmholtz Centre Potsdam - GFZ German Research Centre for Geosciences
% SPDX-FileCopyrightText: 2024 Benjamin Brede
% SPDX-License-Identifier: GPL-3.0-or-later

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addViewangles.R
\docType{methods}
\name{addViewangles}
\alias{addViewangles}
\alias{addViewangles,Rays-method}
\title{Add View Zenith Angle (VZA) and View Azimuth Angle (VAA) to Rays}
\usage{
addViewangles(rays, ...)

\S4method{addViewangles}{Rays}(rays)
}
\arguments{
\item{rays}{An object of class Rays, which contains the trajectory information
of the rays including the X, Y, and Z coordinates of the origin and the target
trajectory points.}

\item{...}{Additional arguments passed to other methods or functions.}
}
\value{
The input Rays object with two new attributes added: VZA and VAA.
}
\description{
This function computes the View Zenith Angle (VZA) and View Azimuth Angle (VAA)
for an object of class Rays.
}
\examples{
# Load required packages
library(lidR)
library(pracma)
library(dplyr)
library(data.table)

# Read in LAS data
data_file <- system.file("extdata", "H7_LS_F2_H20_200901-120129.laz", package = "voxelizer")
las <- readLAS(data_file)

# Create a trajectory for the LAS object
traj_file <- system.file("extdata", "H7_LS_F2_H20_200901-120129.traj", package = "voxelizer")
colnames <- c('gpstime', 'roll', 'pitch', 'yaw', 'Xorigin', 'Yorigin', 'Zorigin')
traj <- fread(traj_file[1], col.names = colnames) \%>\%
  select(gpstime, Xorigin, Yorigin, Zorigin) \%>\%
  rename(Xtraj = Xorigin,
         Ytraj = Yorigin,
         Ztraj = Zorigin)

# Create a subset of the LAS data
laz <- las[1:10]

# Compute rays from LAS points and trajectory
rays_obj <- las2rays(laz, traj)

# Add view angles to the rays object
rays_obj <- addViewangles(rays_obj)

# Check if VZA and VAA attributes have been added
names(rays_obj@data)

# Verify that VZA values are within expected range (0 to 180 degrees)
all(rays_obj@data$VZA >= 0 & rays_obj@data$VZA <= 180)

# Verify that VAA values are within expected range (0 to 360 degrees)
all(rays_obj@data$VAA >= 0 & rays_obj@data$VAA <= 360)

# Example with a larger dataset
laz_large <- las[1:1000]
rays_large <- las2rays(laz_large, traj)
rays_large <- addViewangles(rays_large)

}
\author{
Benjamin Brede
}
